<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="1" localization="8" tooltip="tags:&#x0A;call; come on; whistle" x="139" y="191">
        <bitmap>media/images/box/movement/move.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.oldfps = self.getTimeline().getFPS()
        pass

    def onUnload(self):
        self.getTimeline().setFPS(self.oldfps)
        pass

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        self.getTimeline().setFPS(newfps)
        pass

    def onInput_onStop(self):
        onUnload()
        pass]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
        <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="140" tooltip="" id="5" />
        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="300">
            <BehaviorLayer name="LED">
                <BehaviorKeyframe name="keyframe12" index="12">
                    <Diagram>
                        <Box name="blink" id="1" localization="8" tooltip="blink" x="120" y="39">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="keyframe81" index="81">
                    <Diagram>
                        <Box name="blink" id="1" localization="8" tooltip="blink" x="102" y="43">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="keyframe124" index="124">
                    <Diagram>
                        <Box name="laugh" id="17" localization="8" tooltip="laugh" x="89" y="39">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bMustStop = False;
        self.bIsRunning = False;

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self):
        if( self.bIsRunning ):

            return;

        rDuration = 0.3;
        self.bMustStop = False;
        self.bIsRunning = True;

        while( not self.bMustStop ):
            ALLeds.post.fadeRGB( "FaceLed0", 0x787e9d, rDuration );
            ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed2", 0x2ec1e9, rDuration );
            ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed5", 0x1e9980, rDuration );
            ALLeds.post.fadeRGB( "FaceLed6", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed7", 0x000000, rDuration );

            #time.sleep( 0.1 );

            ALLeds.post.fadeRGB( "FaceLed0", 0x0400a1, rDuration*2 );
            ALLeds.post.fadeRGB( "FaceLed1", 0x14a176, rDuration*2 );
            ALLeds.post.fadeRGB( "FaceLed2", 0x000022, rDuration*2 );
            ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration*2 );
            ALLeds.post.fadeRGB( "FaceLed4", 0x00000e, rDuration*2 );
            ALLeds.post.fadeRGB( "FaceLed5", 0x56ffff, rDuration*2 );
            ALLeds.post.fadeRGB( "FaceLed6", 0x000020, rDuration*2 );
            ALLeds.fadeRGB( "FaceLed7", 0x000038, rDuration*2 );


            if( self.bMustStop ):
                break;

        self.bIsRunning = False;
        self.onStopped();

    def onInput_onStop(self):
        self.bMustStop = True;]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="17" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <BehaviorLayer name="fx">
                <BehaviorKeyframe name="keyframe62" index="62">
                    <Diagram>
                        <Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="79" y="31">
                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/whistle3.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                            <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                <Resource name="Audio player" type="Stop on demand" timeout="0" />
                                            </Box>
                                            <Box name="Get File Path" id="1" localization="8" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <ActuatorList model="Juliette">
                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="0">
                    <Key frame="42" value="38.8457" />
                    <Key frame="64" value="32.8691" />
                    <Key frame="73" value="34.6269" />
                    <Key frame="79" value="33.4843" />
                    <Key frame="87" value="33.3086" />
                    <Key frame="112" value="32.4296" />
                    <Key frame="131" value="43.0645" />
                    <Key frame="143" value="31.9023" />
                    <Key frame="154" value="12.2145" />
                    <Key frame="169" value="-4.3091" />
                    <Key frame="184" value="-6.24272" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="0">
                    <Key frame="42" value="-17.17633" />
                    <Key frame="64" value="-13.13332" />
                    <Key frame="73" value="-26.4929" />
                    <Key frame="79" value="-3.02577" />
                    <Key frame="83" value="-7.0" />
                    <Key frame="87" value="-2.23474" />
                    <Key frame="112" value="1.7204" />
                    <Key frame="131" value="-16.73688" />
                    <Key frame="143" value="-22.0983" />
                    <Key frame="154" value="-6.71722" />
                    <Key frame="169" value="-23.6803" />
                    <Key frame="184" value="-24.9987" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="0">
                    <Key frame="40" value="-12.4" />
                    <Key frame="62" value="-14" />
                    <Key frame="77" value="-17.3" />
                    <Key frame="85" value="-10.7" />
                    <Key frame="110" value="2.5" />
                    <Key frame="129" value="7.02893" />
                    <Key frame="141" value="-11.9557" />
                    <Key frame="152" value="-3.60596" />
                    <Key frame="167" value="50.5353" />
                    <Key frame="182" value="73.3872" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="0">
                    <Key frame="24" value="14.3" />
                    <Key frame="40" value="17.5" />
                    <Key frame="62" value="13.4" />
                    <Key frame="77" value="17.5" />
                    <Key frame="85" value="21.5" />
                    <Key frame="110" value="19.9" />
                    <Key frame="129" value="34.4512" />
                    <Key frame="141" value="25.9257" />
                    <Key frame="152" value="19.3338" />
                    <Key frame="167" value="15.1" />
                    <Key frame="182" value="0.5" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="0">
                    <Key frame="24" value="-102.1" />
                    <Key frame="40" value="-28.2" />
                    <Key frame="62" value="-26.1" />
                    <Key frame="77" value="-28.2" />
                    <Key frame="85" value="-26.1" />
                    <Key frame="110" value="-26.1" />
                    <Key frame="129" value="-118.568" />
                    <Key frame="141" value="-21.8874" />
                    <Key frame="152" value="2.19489" />
                    <Key frame="167" value="-84.7" />
                    <Key frame="182" value="-26.282" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="0">
                    <Key frame="40" value="-89.5" />
                    <Key frame="62" value="-88.5" />
                    <Key frame="77" value="-88.5" />
                    <Key frame="85" value="-88.5" />
                    <Key frame="110" value="-88.5" />
                    <Key frame="129" value="-80.067" />
                    <Key frame="141" value="-69.9594" />
                    <Key frame="152" value="-58.5335" />
                    <Key frame="167" value="-48.8654" />
                    <Key frame="182" value="-29.1776" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="0">
                    <Key frame="24" value="-39.9" />
                    <Key frame="40" value="-66.5" />
                    <Key frame="62" value="-79.8" />
                    <Key frame="85" value="-68.4" />
                    <Key frame="110" value="-58.7141" />
                    <Key frame="129" value="-7.29742" />
                    <Key frame="141" value="-1.49656" />
                    <Key frame="152" value="-15.2077" />
                    <Key frame="182" value="-19.4265" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="1">
                    <Key frame="24" value="0.83" />
                    <Key frame="40" value="0.638182" />
                    <Key frame="62" value="0.6372" />
                    <Key frame="85" value="0.612" />
                    <Key frame="110" value="0.5888" />
                    <Key frame="129" value="0.8736" />
                    <Key frame="141" value="0.381818" />
                    <Key frame="152" value="0.3836" />
                    <Key frame="182" value="0.250909" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="0">
                    <Key frame="38" value="97.9138" />
                    <Key frame="60" value="101.693" />
                    <Key frame="75" value="105.209" />
                    <Key frame="83" value="105.297" />
                    <Key frame="108" value="101.254" />
                    <Key frame="127" value="110.922" />
                    <Key frame="139" value="93.8708" />
                    <Key frame="150" value="88.6852" />
                    <Key frame="165" value="89.2125" />
                    <Key frame="180" value="86.6636" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="0">
                    <Key frame="38" value="-5.53958" />
                    <Key frame="60" value="-3.95753" />
                    <Key frame="75" value="-4.66067" />
                    <Key frame="83" value="-4.57277" />
                    <Key frame="108" value="-4.13332" />
                    <Key frame="127" value="-1.40867" />
                    <Key frame="139" value="-2.63916" />
                    <Key frame="150" value="-2.99072" />
                    <Key frame="165" value="-1.93602" />
                    <Key frame="180" value="-3.95753" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="0">
                    <Key frame="38" value="87.2741" />
                    <Key frame="60" value="95.0086" />
                    <Key frame="75" value="107.313" />
                    <Key frame="83" value="115.224" />
                    <Key frame="108" value="114.081" />
                    <Key frame="127" value="107.225" />
                    <Key frame="139" value="111.532" />
                    <Key frame="150" value="97.7332" />
                    <Key frame="165" value="80.3306" />
                    <Key frame="180" value="80.4185" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="0">
                    <Key frame="38" value="33.0497" />
                    <Key frame="60" value="30.8524" />
                    <Key frame="75" value="29.6219" />
                    <Key frame="83" value="29.3582" />
                    <Key frame="108" value="21.6238" />
                    <Key frame="127" value="52.2101" />
                    <Key frame="139" value="20.3054" />
                    <Key frame="150" value="20.0417" />
                    <Key frame="165" value="32.3466" />
                    <Key frame="180" value="32.9618" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="0">
                    <Key frame="38" value="-9" />
                    <Key frame="60" value="-7.64898" />
                    <Key frame="83" value="-5.53958" />
                    <Key frame="108" value="4.56797" />
                    <Key frame="127" value="9.66569" />
                    <Key frame="139" value="9.57779" />
                    <Key frame="150" value="-4.3091" />
                    <Key frame="180" value="-5.80326" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="1">
                    <Key frame="38" value="0.230909" />
                    <Key frame="60" value="0.2328" />
                    <Key frame="83" value="0.2244" />
                    <Key frame="108" value="0.2364" />
                    <Key frame="127" value="0.226" />
                    <Key frame="139" value="0.226" />
                    <Key frame="150" value="0.2252" />
                    <Key frame="180" value="0.2268" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="HipPitch" recordable="1" mute="0" unit="0">
                    <Key frame="61" value="-2.95181e-07" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="HipRoll" recordable="1" mute="0" unit="0">
                    <Key frame="61" value="2.63912e-12" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="KneePitch" recordable="1" mute="0" unit="0">
                    <Key frame="61" value="-3.99982" />
                </ActuatorCurve>
            </ActuatorList>
        </Timeline>
        <Resource name="Standing" type="Lock" timeout="1" />
        <Resource name="Left eye leds" type="Lock" timeout="1" />
        <Resource name="Right eye leds" type="Lock" timeout="1" />
        <Resource name="TTS" type="Lock" timeout="1" />
        <Resource name="All motors" type="Lock" timeout="1" />
    </Box>
</ChoregrapheProject>
