<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="2" localization="8" tooltip="tags:&#x0A;drive; car; mimic" x="141" y="157">
        <bitmap>media/images/box/movement/move.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.oldfps = self.getTimeline().getFPS()
        pass

    def onUnload(self):
        self.getTimeline().setFPS(self.oldfps)
        pass

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        self.getTimeline().setFPS(newfps)
        pass

    def onInput_onStop(self):
        onUnload()
        pass]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
        <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="150" tooltip="" id="5" />
        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="600">
            <BehaviorLayer name="LED">
                <BehaviorKeyframe name="blink1" index="46">
                    <Diagram>
                        <Box name="blinks" id="1" localization="8" tooltip="blinks" x="252" y="75">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0x000000, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        time.sleep( 0.2 );

        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0x000000, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );



        return;


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="happy" index="207">
                    <Diagram>
                        <Box name="Light_AmusedEyes" id="1" localization="8" tooltip="Set An Animated Gaze Which Expresses Amusement&#x0A;*** ref box in: ./4_localize/animation/Lights/Pleasant/Light_AmusedEyes.xar ***&#x0A;*** last modification date(git):   Thu Oct 15 16:26:21 2009 +0200 ***" x="113" y="74">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 0.2;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0x00ff00, rDuration );

    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.fadeRGB( "FaceLed7", 0x000000, rTime );
      if( self.bMustStop ):
        break;
      ALLeds.fadeRGB( "FaceLed7", 0x00ffff, rTime );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="ouch" index="268">
                    <Diagram>
                        <Box name="blinks" id="1" localization="8" tooltip="blinks" x="252" y="75">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        rDuration = 0.1;
        ALLeds.fadeRGB( "FaceLeds", 0x000000, rDuration );



        return;


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="+_-" index="300">
                    <Diagram>
                        <Box name="+_-" id="1" localization="8" tooltip="blink" x="181" y="62">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.5;
        ALLeds.post.fadeRGB( "RightFaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "RightFaceLed1", 0x0048ff, rDuration );
        ALLeds.post.fadeRGB( "RightFaceLed2", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "RightFaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "RightFaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "RightFaceLed5", 0x002cff, rDuration );
        ALLeds.post.fadeRGB( "RightFaceLed6", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "RightFaceLed7", 0x000000, rDuration );

        ALLeds.post.fadeRGB( "LeftFaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "LeftFaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "LeftFaceLed2", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "LeftFaceLed3", 0x0048ff, rDuration );
        ALLeds.post.fadeRGB( "LeftFaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "LeftFaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "LeftFaceLed6", 0x000000, rDuration );
        ALLeds.fadeRGB( "LeftFaceLed7", 0x002cff, rDuration );

        return;


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="normal" index="350">
                    <Diagram>
                        <Box name="blinks" id="1" localization="8" tooltip="blinks" x="252" y="75">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        rDuration = 1;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        return;


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <BehaviorLayer name="sounds">
                <BehaviorKeyframe name="carStart" index="28">
                    <Diagram>
                        <Box name="Play Sound" id="3" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="96" y="38">
                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/carStart.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                            <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                <Resource name="Audio player" type="Stop on demand" timeout="0" />
                                            </Box>
                                            <Box name="Get File Path" id="1" localization="8" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="hey" index="227">
                    <Diagram>
                        <Box name="Play Sound" id="3" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="104" y="35">
                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/yoohoo.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                            <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                <Resource name="Audio player" type="Stop on demand" timeout="0" />
                                            </Box>
                                            <Box name="Get File Path" id="1" localization="8" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
                <BehaviorKeyframe name="angry" index="296">
                    <Diagram>
                        <Box name="Play Sound" id="3" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="110" y="35">
                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/borbo5.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                            <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                <Resource name="Audio player" type="Stop on demand" timeout="0" />
                                            </Box>
                                            <Box name="Get File Path" id="1" localization="8" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <BehaviorLayer name="sounds2">
                <BehaviorKeyframe name="keyframe255" index="255">
                    <Diagram>
                        <Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="121" y="45">
                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/carCrash1.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                            <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                <Resource name="Audio player" type="Stop on demand" timeout="0" />
                                            </Box>
                                            <Box name="Get File Path" id="1" localization="8" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
            <ActuatorList model="Juliette">
                <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="0">
                    <Key frame="26" value="-5.89115" />
                    <Key frame="46" value="-24.8758" />
                    <Key frame="56" value="-33" />
                    <Key frame="81" value="-4.22121" />
                    <Key frame="94" value="-25.1394" />
                    <Key frame="104" value="-28" />
                    <Key frame="116" value="-15" />
                    <Key frame="129" value="-6.24272" />
                    <Key frame="154" value="-25.5789" />
                    <Key frame="169" value="-29.6219" />
                    <Key frame="210" value="12.5661" />
                    <Key frame="219" value="17.8396" />
                    <Key frame="262" value="36" />
                    <Key frame="267" value="28" />
                    <Key frame="274" value="-0.969213" />
                    <Key frame="284" value="-0.441863" />
                    <Key frame="289" value="-25.0515" />
                    <Key frame="293" value="22" />
                    <Key frame="296" value="-27" />
                    <Key frame="300" value="31" />
                    <Key frame="305" value="-34" />
                    <Key frame="325" value="-43" />
                    <Key frame="348" value="-40.3447" />
                    <Key frame="375" value="9" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="0">
                    <Key frame="26" value="-14.89115" />
                    <Key frame="46" value="8.3123" />
                    <Key frame="56" value="12.0" />
                    <Key frame="81" value="-14.10012" />
                    <Key frame="94" value="-14.53958" />
                    <Key frame="104" value="-14.45169" />
                    <Key frame="116" value="-14.53958" />
                    <Key frame="129" value="-14.89115" />
                    <Key frame="154" value="-15.06693" />
                    <Key frame="169" value="-11.63916" />
                    <Key frame="210" value="-10.58446" />
                    <Key frame="219" value="-14.3638" />
                    <Key frame="262" value="-14.62747" />
                    <Key frame="267" value="-27.4597" />
                    <Key frame="274" value="20.0898" />
                    <Key frame="284" value="20.5" />
                    <Key frame="289" value="20.0019" />
                    <Key frame="325" value="-24.0" />
                    <Key frame="348" value="-13.04542" />
                    <Key frame="375" value="-10.0" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="0">
                    <Key frame="24" value="55.7209" />
                    <Key frame="44" value="34.0117" />
                    <Key frame="51" value="32.3418" />
                    <Key frame="54" value="34.7148" />
                    <Key frame="58" value="32.3418" />
                    <Key frame="61" value="34.7148" />
                    <Key frame="66" value="33.4843" />
                    <Key frame="68" value="34.7148" />
                    <Key frame="79" value="31.3749" />
                    <Key frame="92" value="24.5194" />
                    <Key frame="102" value="34.0117" />
                    <Key frame="114" value="38.9336" />
                    <Key frame="127" value="26.1014" />
                    <Key frame="152" value="33.0449" />
                    <Key frame="167" value="-3.51807" />
                    <Key frame="195" value="-9" />
                    <Key frame="217" value="50.7111" />
                    <Key frame="227" value="53.8752" />
                    <Key frame="237" value="50.8869" />
                    <Key frame="244" value="47.7228" />
                    <Key frame="253" value="42.8009" />
                    <Key frame="260" value="32.5175" />
                    <Key frame="265" value="26.3651" />
                    <Key frame="272" value="48.0744" />
                    <Key frame="282" value="48.9533" />
                    <Key frame="303" value="50.5353" />
                    <Key frame="310" value="50.6232" />
                    <Key frame="318" value="48.6896" />
                    <Key frame="323" value="43.0645" />
                    <Key frame="328" value="45.5255" />
                    <Key frame="335" value="45.4376" />
                    <Key frame="341" value="43.0645" />
                    <Key frame="346" value="43.0645" />
                    <Key frame="357" value="49.217" />
                    <Key frame="373" value="87.5378" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="0">
                    <Key frame="24" value="7.64418" />
                    <Key frame="44" value="6.85315" />
                    <Key frame="51" value="6.85315" />
                    <Key frame="54" value="6.94104" />
                    <Key frame="58" value="6.85315" />
                    <Key frame="61" value="6.94104" />
                    <Key frame="66" value="6.85315" />
                    <Key frame="68" value="6.94104" />
                    <Key frame="79" value="6.85315" />
                    <Key frame="92" value="6.76526" />
                    <Key frame="102" value="6.58948" />
                    <Key frame="114" value="6.67737" />
                    <Key frame="127" value="6.50158" />
                    <Key frame="152" value="6.50158" />
                    <Key frame="167" value="2.98591" />
                    <Key frame="195" value="1.57965" />
                    <Key frame="208" value="6" />
                    <Key frame="217" value="0.788621" />
                    <Key frame="227" value="1.31597" />
                    <Key frame="237" value="1.84332" />
                    <Key frame="244" value="3.7" />
                    <Key frame="253" value="5.4" />
                    <Key frame="260" value="4.5" />
                    <Key frame="265" value="1.57965" />
                    <Key frame="272" value="10.7204" />
                    <Key frame="282" value="10.1051" />
                    <Key frame="303" value="10.2809" />
                    <Key frame="310" value="10.2809" />
                    <Key frame="318" value="8.52309" />
                    <Key frame="323" value="5.44688" />
                    <Key frame="328" value="5.97423" />
                    <Key frame="335" value="5.97423" />
                    <Key frame="341" value="5.35899" />
                    <Key frame="346" value="5.35899" />
                    <Key frame="357" value="5.97423" />
                    <Key frame="373" value="7.64418" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="0">
                    <Key frame="24" value="-82.1812" />
                    <Key frame="44" value="-51.9464" />
                    <Key frame="51" value="-51.9464" />
                    <Key frame="54" value="-52.2101" />
                    <Key frame="58" value="-51.9464" />
                    <Key frame="61" value="-52.2101" />
                    <Key frame="66" value="-51.9464" />
                    <Key frame="68" value="-52.2101" />
                    <Key frame="79" value="-51.9464" />
                    <Key frame="92" value="-51.507" />
                    <Key frame="102" value="-50.8917" />
                    <Key frame="114" value="-50.5401" />
                    <Key frame="127" value="-51.5948" />
                    <Key frame="152" value="-52.1222" />
                    <Key frame="167" value="-18.4597" />
                    <Key frame="195" value="-8.44001" />
                    <Key frame="217" value="-75.9409" />
                    <Key frame="227" value="-75.1498" />
                    <Key frame="237" value="-70.3158" />
                    <Key frame="244" value="-66.888" />
                    <Key frame="253" value="-63.9876" />
                    <Key frame="260" value="-67.4" />
                    <Key frame="265" value="-59.3293" />
                    <Key frame="272" value="-65.306" />
                    <Key frame="282" value="-71.7" />
                    <Key frame="303" value="-71.7" />
                    <Key frame="310" value="-73.9" />
                    <Key frame="318" value="-76" />
                    <Key frame="323" value="-71.7" />
                    <Key frame="328" value="-64.427" />
                    <Key frame="335" value="-64.427" />
                    <Key frame="341" value="-64.427" />
                    <Key frame="346" value="-64.427" />
                    <Key frame="357" value="-64.427" />
                    <Key frame="373" value="-56.5168" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="0">
                    <Key frame="24" value="-87.1862" />
                    <Key frame="44" value="-44.2071" />
                    <Key frame="51" value="-44.1192" />
                    <Key frame="54" value="-44.295" />
                    <Key frame="58" value="-44.1192" />
                    <Key frame="61" value="-44.295" />
                    <Key frame="66" value="-44.1192" />
                    <Key frame="68" value="-44.295" />
                    <Key frame="79" value="-44.1192" />
                    <Key frame="92" value="-44.8224" />
                    <Key frame="102" value="-43.9435" />
                    <Key frame="114" value="-43.6798" />
                    <Key frame="127" value="-44.4708" />
                    <Key frame="152" value="-44.9103" />
                    <Key frame="167" value="-41.2188" />
                    <Key frame="195" value="-43.7677" />
                    <Key frame="208" value="-43" />
                    <Key frame="217" value="-52.6447" />
                    <Key frame="227" value="-51.3264" />
                    <Key frame="237" value="-50.6232" />
                    <Key frame="244" value="-50.1838" />
                    <Key frame="253" value="-50.1838" />
                    <Key frame="260" value="-50.1838" />
                    <Key frame="265" value="-19.7732" />
                    <Key frame="272" value="-82.1764" />
                    <Key frame="282" value="-81.0338" />
                    <Key frame="303" value="-79.6275" />
                    <Key frame="310" value="-79.5396" />
                    <Key frame="318" value="-64.5101" />
                    <Key frame="323" value="-49.217" />
                    <Key frame="328" value="-49.1291" />
                    <Key frame="335" value="-49.217" />
                    <Key frame="341" value="-49.217" />
                    <Key frame="346" value="-49.217" />
                    <Key frame="357" value="-49.217" />
                    <Key frame="373" value="-29.3534" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="0">
                    <Key frame="44" value="-18.8112" />
                    <Key frame="102" value="-19.9538" />
                    <Key frame="114" value="-19.0749" />
                    <Key frame="152" value="-18.8112" />
                    <Key frame="167" value="-17.3171" />
                    <Key frame="195" value="-17.405" />
                    <Key frame="217" value="-23.03" />
                    <Key frame="227" value="-21.5359" />
                    <Key frame="260" value="-21.0085" />
                    <Key frame="265" value="-21.6238" />
                    <Key frame="272" value="-21.448" />
                    <Key frame="282" value="-21.6238" />
                    <Key frame="310" value="-21.7117" />
                    <Key frame="323" value="-21.6238" />
                    <Key frame="357" value="-21.6238" />
                    <Key frame="373" value="4.56797" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="1">
                    <Key frame="24" value="0.774545" />
                    <Key frame="44" value="0.232389" />
                    <Key frame="102" value="0.227298" />
                    <Key frame="114" value="0.225844" />
                    <Key frame="152" value="0.225844" />
                    <Key frame="167" value="0.220753" />
                    <Key frame="195" value="0.216389" />
                    <Key frame="217" value="0.208389" />
                    <Key frame="227" value="0.212389" />
                    <Key frame="260" value="0.212389" />
                    <Key frame="265" value="0.212389" />
                    <Key frame="272" value="0.208389" />
                    <Key frame="282" value="0.206571" />
                    <Key frame="310" value="0.206571" />
                    <Key frame="323" value="0.208753" />
                    <Key frame="357" value="0.206571" />
                    <Key frame="373" value="0.2084" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="0">
                    <Key frame="22" value="54.6711" />
                    <Key frame="42" value="69.0853" />
                    <Key frame="49" value="105.648" />
                    <Key frame="52" value="106.263" />
                    <Key frame="56" value="110.746" />
                    <Key frame="59" value="110.746" />
                    <Key frame="64" value="79.8081" />
                    <Key frame="66" value="70.4916" />
                    <Key frame="77" value="55" />
                    <Key frame="90" value="35.9501" />
                    <Key frame="100" value="31.6434" />
                    <Key frame="112" value="29.7977" />
                    <Key frame="125" value="33.4013" />
                    <Key frame="150" value="29.3582" />
                    <Key frame="165" value="53.6" />
                    <Key frame="193" value="60.2" />
                    <Key frame="215" value="13.0983" />
                    <Key frame="225" value="1.93602" />
                    <Key frame="235" value="-13.8845" />
                    <Key frame="242" value="-13.3571" />
                    <Key frame="251" value="-20.2127" />
                    <Key frame="258" value="-7.29261" />
                    <Key frame="263" value="14.5924" />
                    <Key frame="270" value="43.0693" />
                    <Key frame="280" value="44.0362" />
                    <Key frame="301" value="46.7608" />
                    <Key frame="308" value="-14.7634" />
                    <Key frame="316" value="-33" />
                    <Key frame="321" value="-13" />
                    <Key frame="326" value="-19.4217" />
                    <Key frame="333" value="-12.3024" />
                    <Key frame="339" value="-21" />
                    <Key frame="344" value="-15" />
                    <Key frame="371" value="89.7399" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="0">
                    <Key frame="22" value="-14.2409" />
                    <Key frame="42" value="-46.4092" />
                    <Key frame="49" value="-42.8936" />
                    <Key frame="52" value="-42.542" />
                    <Key frame="56" value="-36.829" />
                    <Key frame="59" value="-36.4775" />
                    <Key frame="64" value="-36.1259" />
                    <Key frame="66" value="-35.0712" />
                    <Key frame="77" value="-22" />
                    <Key frame="90" value="-10.6373" />
                    <Key frame="100" value="-11.7799" />
                    <Key frame="112" value="-11.3404" />
                    <Key frame="125" value="-11.4283" />
                    <Key frame="150" value="-12.1315" />
                    <Key frame="165" value="-3.7" />
                    <Key frame="193" value="-3.07861" />
                    <Key frame="206" value="-9" />
                    <Key frame="215" value="-3.7" />
                    <Key frame="225" value="-4.66067" />
                    <Key frame="235" value="-6.59428" />
                    <Key frame="242" value="-7.29742" />
                    <Key frame="251" value="-10.3736" />
                    <Key frame="258" value="-8.5279" />
                    <Key frame="263" value="-9.14314" />
                    <Key frame="270" value="-12.0436" />
                    <Key frame="280" value="-11.1647" />
                    <Key frame="301" value="-10.8131" />
                    <Key frame="308" value="-33.8407" />
                    <Key frame="316" value="-38.1474" />
                    <Key frame="321" value="-36.2138" />
                    <Key frame="326" value="-35.1591" />
                    <Key frame="333" value="-35.247" />
                    <Key frame="339" value="-34" />
                    <Key frame="344" value="-33" />
                    <Key frame="371" value="-6.4185" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="0">
                    <Key frame="22" value="93.4265" />
                    <Key frame="42" value="64.4222" />
                    <Key frame="49" value="85.4284" />
                    <Key frame="52" value="84.5494" />
                    <Key frame="56" value="104.061" />
                    <Key frame="59" value="103.095" />
                    <Key frame="64" value="87.362" />
                    <Key frame="66" value="90.2624" />
                    <Key frame="77" value="106.347" />
                    <Key frame="90" value="42.2735" />
                    <Key frame="100" value="45.3497" />
                    <Key frame="112" value="45.0861" />
                    <Key frame="125" value="46.0529" />
                    <Key frame="150" value="46.4044" />
                    <Key frame="165" value="70.5746" />
                    <Key frame="193" value="75.7603" />
                    <Key frame="215" value="30.6718" />
                    <Key frame="225" value="62.4007" />
                    <Key frame="235" value="81.2096" />
                    <Key frame="242" value="87.6256" />
                    <Key frame="251" value="73.2114" />
                    <Key frame="258" value="73.7388" />
                    <Key frame="263" value="57.5667" />
                    <Key frame="270" value="78.2" />
                    <Key frame="280" value="69.5" />
                    <Key frame="301" value="69.5" />
                    <Key frame="308" value="-12.8346" />
                    <Key frame="316" value="70.8383" />
                    <Key frame="321" value="85" />
                    <Key frame="326" value="86.5709" />
                    <Key frame="333" value="85.5163" />
                    <Key frame="339" value="87" />
                    <Key frame="344" value="89" />
                    <Key frame="371" value="60.555" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="0">
                    <Key frame="22" value="87.4547" />
                    <Key frame="42" value="59.7688" />
                    <Key frame="49" value="80.5991" />
                    <Key frame="52" value="79.6323" />
                    <Key frame="56" value="74.0072" />
                    <Key frame="59" value="74.0951" />
                    <Key frame="64" value="52.4738" />
                    <Key frame="66" value="56.0773" />
                    <Key frame="77" value="80" />
                    <Key frame="90" value="48.6065" />
                    <Key frame="100" value="48.8702" />
                    <Key frame="112" value="48.6065" />
                    <Key frame="125" value="48.6944" />
                    <Key frame="150" value="48.6944" />
                    <Key frame="165" value="59.6" />
                    <Key frame="193" value="60.4" />
                    <Key frame="215" value="46.8487" />
                    <Key frame="225" value="49.2218" />
                    <Key frame="235" value="66.0091" />
                    <Key frame="242" value="46.4092" />
                    <Key frame="251" value="70.4916" />
                    <Key frame="258" value="54.7589" />
                    <Key frame="263" value="58.4504" />
                    <Key frame="270" value="81.3901" />
                    <Key frame="280" value="80.1597" />
                    <Key frame="301" value="78.9292" />
                    <Key frame="308" value="78.9292" />
                    <Key frame="316" value="82.4448" />
                    <Key frame="321" value="57" />
                    <Key frame="326" value="88.3336" />
                    <Key frame="333" value="57.3078" />
                    <Key frame="339" value="88.5" />
                    <Key frame="344" value="48" />
                    <Key frame="371" value="29.534" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="0">
                    <Key frame="42" value="-32" />
                    <Key frame="77" value="-47" />
                    <Key frame="90" value="45" />
                    <Key frame="100" value="26.9804" />
                    <Key frame="112" value="21.0037" />
                    <Key frame="150" value="26.6288" />
                    <Key frame="165" value="40.8672" />
                    <Key frame="193" value="49.3927" />
                    <Key frame="215" value="21.7947" />
                    <Key frame="225" value="-5" />
                    <Key frame="235" value="-14" />
                    <Key frame="258" value="-4" />
                    <Key frame="263" value="-15" />
                    <Key frame="270" value="25.3104" />
                    <Key frame="280" value="24.6073" />
                    <Key frame="308" value="49" />
                    <Key frame="316" value="22" />
                    <Key frame="321" value="25.3983" />
                    <Key frame="344" value="0" />
                    <Key frame="371" value="13.5329" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="1">
                    <Key frame="22" value="0.865454" />
                    <Key frame="42" value="0.269844" />
                    <Key frame="77" value="0.8" />
                    <Key frame="90" value="0.654545" />
                    <Key frame="100" value="0.269844" />
                    <Key frame="112" value="0.128026" />
                    <Key frame="150" value="0.261844" />
                    <Key frame="165" value="0.257116" />
                    <Key frame="193" value="0.253116" />
                    <Key frame="215" value="0.24548" />
                    <Key frame="225" value="0.654545" />
                    <Key frame="235" value="0.818182" />
                    <Key frame="258" value="0.925455" />
                    <Key frame="263" value="0.612727" />
                    <Key frame="270" value="0.246935" />
                    <Key frame="280" value="0.248389" />
                    <Key frame="308" value="0.769091" />
                    <Key frame="316" value="0.236364" />
                    <Key frame="321" value="0.248389" />
                    <Key frame="344" value="0.181818" />
                    <Key frame="371" value="0.25" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="HipPitch" recordable="1" mute="0" unit="0">
                    <Key frame="43" value="-21.7" />
                    <Key frame="252" value="-21.7" />
                    <Key frame="264" value="-16.8" />
                    <Key frame="283" value="-29.1" />
                    <Key frame="309" value="-29.1" />
                    <Key frame="345" value="-10.3" />
                    <Key frame="372" value="-0.000408781" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="HipRoll" recordable="1" mute="0" unit="0">
                    <Key frame="43" value="0" />
                    <Key frame="144" value="-1.3808e-15" />
                    <Key frame="175" value="-8" />
                    <Key frame="190" value="-8.6" />
                    <Key frame="216" value="3.2" />
                    <Key frame="252" value="-2.90742e-15" />
                    <Key frame="309" value="-9.61116e-16" />
                    <Key frame="372" value="-1.034e-15" />
                </ActuatorCurve>
                <ActuatorCurve name="value" actuator="KneePitch" recordable="1" mute="0" unit="0">
                    <Key frame="43" value="14" />
                    <Key frame="252" value="14" />
                    <Key frame="283" value="16.9" />
                    <Key frame="309" value="16.9" />
                    <Key frame="345" value="5.1" />
                    <Key frame="372" value="-4.0002" />
                </ActuatorCurve>
            </ActuatorList>
        </Timeline>
        <Resource name="Standing" type="Lock" timeout="1" />
        <Resource name="Left eye leds" type="Lock" timeout="1" />
        <Resource name="Right eye leds" type="Lock" timeout="1" />
        <Resource name="HeadYaw" type="Lock" timeout="1" />
        <Resource name="HeadPitch" type="Lock" timeout="1" />
        <Resource name="LShoulderPitch" type="Lock" timeout="1" />
        <Resource name="LShoulderRoll" type="Lock" timeout="1" />
        <Resource name="LElbowRoll" type="Lock" timeout="1" />
        <Resource name="LElbowYaw" type="Lock" timeout="1" />
        <Resource name="LWristYaw" type="Lock" timeout="1" />
        <Resource name="LHand" type="Lock" timeout="1" />
        <Resource name="RShoulderPitch" type="Lock" timeout="1" />
        <Resource name="RShoulderRoll" type="Lock" timeout="1" />
        <Resource name="RElbowRoll" type="Lock" timeout="1" />
        <Resource name="RElbowYaw" type="Lock" timeout="1" />
        <Resource name="RWristYaw" type="Lock" timeout="1" />
        <Resource name="RHand" type="Lock" timeout="1" />
        <Resource name="LHipYawPitch" type="Lock" timeout="1" />
        <Resource name="LHipRoll" type="Lock" timeout="1" />
        <Resource name="LHipPitch" type="Lock" timeout="1" />
        <Resource name="LKneePitch" type="Lock" timeout="1" />
        <Resource name="LAnklePitch" type="Lock" timeout="1" />
        <Resource name="LAnkleRoll" type="Lock" timeout="1" />
        <Resource name="RHipRoll" type="Lock" timeout="1" />
        <Resource name="RHipPitch" type="Lock" timeout="1" />
        <Resource name="RKneePitch" type="Lock" timeout="1" />
        <Resource name="RAnklePitch" type="Lock" timeout="1" />
        <Resource name="RAnkleRoll" type="Lock" timeout="1" />
    </Box>
</ChoregrapheProject>
