<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Input name="UserSession/ShouldExitInteractiveActivity" type="0" type_size="1" nature="4" stm_value_name="UserSession/ShouldExitInteractiveActivity" inner="1" tooltip="UserSession/ShouldExitInteractiveActivity desc" id="4" />
    <Input name="Dialog/LastInput" type="0" type_size="1" nature="4" stm_value_name="Dialog/LastInput" inner="1" tooltip="Dialog/LastInput desc" id="5" />
    <Input name="ALTextToSpeech/TextStarted" type="0" type_size="1" nature="4" stm_value_name="ALTextToSpeech/TextStarted" inner="1" tooltip="ALTextToSpeech/TextStarted desc" id="6" />
    <Input name="Dialog/NoOneSpeak15" type="0" type_size="1" nature="4" stm_value_name="Dialog/NoOneSpeak15" inner="1" tooltip="Dialog/NoOneSpeak15 desc" id="7" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="8" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram scale="84.0896">
            <Box name="start" id="3" localization="8" tooltip="Enter tooltip here" x="735" y="30">
              <bitmap>/home/sunnyson/Téléchargements/choregraphe-suite-1.24.0.27-linux64/share/choregraphe/media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import thread

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.dialog = ALProxy("ALDialog")
        self.memory = ALProxy("ALMemory")
        self.dialog._preloadMain()
        self.audioDevice = ALProxy("ALAudioDevice")



    def onLoad(self):
        self.volume = self.audioDevice.getOutputVolume()
        self.log("Volume: "+str(self.volume))

        if 1 == int(self.memory.getData("Dialog/IsStarted")):
            self.onUnload()
        self.dialog._runMain()
        pass



    def onUnload(self):
        self.dialog._stopMain()
        self.onStopped()
        pass


    def onInput_onStart(self):
        pass


    def onInput_onStop(self):
        try:
            if (self.memory.getData("Dialog/DoNotStop")==1):
                return;
        except:
            pass
        self.onUnload()
        #it is recommended to reuse the clean-up as the box is stopped]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Parameter name="editable" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="5" />
            </Box>
            <Box name="Stop management" id="2" localization="8" tooltip="" x="316" y="136">
              <bitmap>media/images/box/box-python-script.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.preference = ALProxy("ALPreferenceManager")
        value = self.preference.getValue("com.softbankrobotics.rundialog","timeoutleaveinteraction")

        if value=="1":
            self.log("* * * * * run_dialog: New exit mode")
            self.oldMode = False
        else:
            self.log("* * * * * run_dialog: Old exit mode")
            self.oldMode = True

        self.firstTime = False
        self.waiting = None


        pass

    def onUnload(self):
        self.cancelWaiting()
        #put clean-up code here
        pass


    def triggerOutput(self):
        if self.firstTime==True:
            return
        self.firstTime = False
        self.onStopped()
        self.log("* * * * * run_dialog: Stop on timer")


    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(15 * 1000 * 1000))



    def onInput_onStop(self):
        self.cancelWaiting()
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box

    def onInput_speech(self, p):
        #if self.oldMode==True:
        #    return
        if (p==0):
            self.onInput_noonespeak()
        if (p==1):
            self.cancelWaiting()
        pass

    def onInput_shouldstop(self):
        if self.oldMode==False:
            return
        if self.firstTime==True:
            return
        self.firstTime = False
        self.onStopped()


    def onInput_noonespeak(self):
        if self.oldMode==True:
            return
        if self.firstTime==True:
            return
        self.firstTime = False
        self.log("* * * * * run_dialog: Start timer")
        self.onInput_onStart()


    def onInput_noonespeak15(self):
        if self.oldMode==True:
            return
        if self.firstTime==True:
            return
        self.firstTime = False
        self.log("* * * * * run_dialog: Stop after no one speak")
        self.triggerOutput()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Input name="shouldstop" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
              <Input name="noonespeak" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
              <Input name="speech" type="0" type_size="1" nature="1" inner="0" tooltip="" id="6" />
              <Input name="noonespeak15" type="1" type_size="1" nature="1" inner="0" tooltip="" id="7" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="8" />
            </Box>
            <Link inputowner="0" indexofinput="8" outputowner="3" indexofoutput="4" />
            <Link inputowner="2" indexofinput="6" outputowner="0" indexofoutput="6" />
            <Link inputowner="3" indexofinput="3" outputowner="2" indexofoutput="8" />
            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="2" indexofinput="5" outputowner="0" indexofoutput="5" />
            <Link inputowner="2" indexofinput="7" outputowner="0" indexofoutput="7" />
            <Link inputowner="2" indexofinput="4" outputowner="0" indexofoutput="4" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
