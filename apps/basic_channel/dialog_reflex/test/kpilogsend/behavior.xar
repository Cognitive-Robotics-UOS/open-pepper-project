<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="KpiLogSend" id="1" localization="8" tooltip="" x="292" y="104">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[
import os
import sys
import datetime

from naoqi import ALModule

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.logtype = "Reflex_FT"

        self.memory = ALProxy("ALMemory")
        self.kpilib = ALProxy("KpiLib")

        self.fullheadid = self.memory.getData("RobotConfig/Head/FullHeadId")

        packagemanager = ALProxy("PackageManager")
        packageinfo = dict(packagemanager.package(self.packageUid()))
        #self.appname = packageinfo['uuid']
        self.appversion = packageinfo['version']
        pass

    def onUnload(self):
        self.memory = None
        self.kpilib = None
        pass

    def onInput_onStart(self):

        #timestamp = datetime.datetime.now().strftime("%Y/%m/%d %H:%M:%S")
        reflex_word = self.memory.getData("Dialog/LastInput")

        kpi_log_data = {
            "Type"       : self.logtype,
            #"AppName"    : self.appname,
            "AppVersion" : self.appversion,
            #"Datetime"   : timestamp,
            "FullHeadID" : self.fullheadid,
            "ReflexWord" : str(reflex_word),
        }
        json_data = json.dumps(kpi_log_data)
        self.kpilib._sendKpiInfo(self.packageUid(), json_data)

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="4" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
