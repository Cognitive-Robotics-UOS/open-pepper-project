<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="check_language_packs" id="2" localization="8" tooltip="" x="206" y="69">
                            <bitmap>../../../../Images/brain.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        self.asr = ALProxy("ALSpeechRecognition")
        self.dialog = ALProxy("ALDialog")
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        #déclaration de la liste qui va contenir les langues supportées
        languages=[]

        #dictionnaire liant un langage à son équivalent Nuance
        nuance_languages = {'English': 'enu', 'French': 'frf', 'Japanese': 'jpj', 'Chinese': 'mnc', 'Greek': 'grg',  'Korean': 'kok', 'German': 'ged', 'Italian': 'iti', 'Portuguese': 'ptp', 'Spanish': 'spe', 'Brazilian': 'ptb', 'Turkish': 'trt', 'Arabic': 'arw', 'Polish': 'plp', 'Czech': 'czc', 'Dutch': 'dun', 'Danish': 'dad', 'Finnish': 'fif', 'Swedish': 'sws', 'Russian': 'rur', 'Norwegian': 'non', 'CantoneseHK': 'cah', 'EnglishAustralia': 'ena', 'EnglishGB': 'eng', 'EnglishIndian': 'eni', 'FrenchCanadian': 'frc', 'MandarinTaiwan': 'mmt',  'SpanishMexico': 'spm'}

        self.langs = self.asr.getAvailableLanguages()

        #parsing du résultat de getAvailableLanguages
        for lang in self.langs:
            #création d'une variable ALMemory par langue
            ALMemory.insertData("Dialog/Language/Lang" + lang ,1)
            #ajout des langues à la liste
            languages.append(lang)

        #remplissage du concept dynamique all_languages pour toutes les langues présentes sur le robot
        try:
            for lang in self.langs:
                self.dialog.setConcept("all_languages", nuance_languages[lang], languages)
        except:
            self.log("Error linked to checkLanguages.")

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
